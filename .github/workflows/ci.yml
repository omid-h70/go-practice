# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
# Service Containers To Run with container-job
    services:
      #Label used to access service container
      postgres:
        #docker image
        iamge: postgres:14.1-alpine
        env:
          POSTGRES_USER: root
          POSTGRE_PASSWORD: postgres
          POSTGRES_DB: test_db
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_ready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5s
        ports:
          5432:5432
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: go build -v ./...

#     Make Migration steps
#    - name: Install Project Migrations
#      run: |
#      https://github.com/golang-migrate/migrate/releases/download/v4.12.2/migrate.linux-amd64.tar.gz | tar xvz
#      sudo mv migrate.linux-amd64 /usr/bin/migrate
#    - name: Run Migration
#      run: make migrations

    - name: Test
 #     run: go test -v ./...
      run: make test
